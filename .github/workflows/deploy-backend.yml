name: Deploy Backend to EC2

on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Changed from 22 to 18 for better compatibility

      - name: Install Dependencies
        run: |
          cd backend
          npm install

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Create database directory
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'mkdir -p /home/ec2-user/app/database && chmod 777 /home/ec2-user/app/database'

      - name: Deploy backend files
        run: |
          scp -i ~/.ssh/deploy.key -r backend/* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ec2-user/app

      - name: Copy SQL schema files
        run: |
          scp -i ~/.ssh/deploy.key -r database/*.sql ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ec2-user/app/database/

      - name: Install and restart service
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /home/ec2-user/app && npm install && pm2 delete plants-api || true && pm2 start server.ts --name "plants-api" --interpreter ./node_modules/.bin/ts-node'

      - name: Set PM2 to start on reboot
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 save && sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u ec2-user --hp /home/ec2-user'

      - name: Install system dependencies for better-sqlite3
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'sudo yum install -y gcc gcc-c++ make'

      - name: Test API after deployment
        run: |
          sleep 10 # Give the API time to start
          curl -s http://${{ secrets.HOST }}:3000/api/health || echo "API health check failed"

      - name: Setup environment variables
        run: |
          echo "Creating .env file..."
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cat > /home/ec2-user/app/.env << EOL
          PORT=3000
          # Add other environment variables here
          EOL'
